apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - https://github.com/knative/serving/releases/download/knative-v1.11.0/serving-core.yaml
  - https://github.com/knative/net-istio/releases/download/knative-v1.11.0/net-istio.yaml
patches:
  - patch: |-
      - op: add
        value: "ignore"
        path: /metadata/annotations/client.lifecycle.config.k8s.io~1mutation
    target:
      kind: "MutatingWebhookConfiguration"
  - patch: |-
      - op: add
        value: "ignore"
        path: /metadata/annotations/client.lifecycle.config.k8s.io~1mutation
    target:
      kind: "ValidatingWebhookConfiguration"
  - patch: |-
      $patch: delete
      apiVersion: networking.istio.io/v1beta1
      kind: Gateway
      metadata:
        name: knative-ingress-gateway
        namespace: knative-serving
  - patch: |-
      $patch: delete
      apiVersion: networking.istio.io/v1beta1
      kind: Gateway
      metadata:
        name: knative-local-gateway
        namespace: knative-serving
  - patch: |-
      $patch: delete
      apiVersion: v1
      kind: Service
      metadata:
        name: knative-local-gateway
        namespace: istio-system

  - patch: |-
      apiVersion: v1
      kind: Namespace
      metadata:
        name: knative-serving
        labels:
          istio-injection: enabled
          pod-security.kubernetes.io/enforce: privileged
    target:
      kind: Namespace
      name: knative-serving
  - patch: |-
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-network
        namespace: knative-serving
      data:

    target:
      kind: ConfigMap
      name: config-network
  - patch: |-
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-domain
        namespace: knative-serving
      data:
        domain-template: "{{.Name}}-{{.Namespace}}.{{.Domain}}"
    target:
      kind: ConfigMap
      name: config-domain
  - patch: |-
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: config-istio
        namespace: knative-serving
      data:
        # gateway.<gateway-namespace>.<gateway-name>: istio-ingressgateway.istio-system.svc.cluster.local
        # gateway.knative-serving.knative-ingress-gateway: <ingress_name>.<ingress_namespace>.svc.cluster.local
        gateway.istio-system.gateway: istio-ingressgateway.istio-ingress.svc.cluster.local
        local-gateway.istio-system.local-gateway: istio-ingressgateway.istio-ingress.svc.cluster.local
    target:
      kind: ConfigMap
      name: config-istio
